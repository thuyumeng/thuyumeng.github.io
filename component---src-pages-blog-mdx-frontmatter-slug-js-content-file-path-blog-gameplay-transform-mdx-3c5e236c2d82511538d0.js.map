{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-gameplay-transform-mdx-3c5e236c2d82511538d0.js","mappings":"wQAOA,MAeMA,EAAa,CACjBC,GAhBSC,GAASC,EAAAA,cAAoB,KAAMC,OAAOC,OAAO,CAC1DC,MAAO,CACLC,MAAO,YAERL,IAaDM,GAZSN,GAASC,EAAAA,cAAoB,KAAMC,OAAOC,OAAO,CAC1DC,MAAO,CACLC,MAAO,YAERL,IASDO,GARSP,GAASC,EAAAA,cAAoB,KAAMC,OAAOC,OAAO,CAC1DC,MAAO,CACLC,MAAO,YAERL,KAMGQ,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAOV,EAAAA,cAAoBW,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/Bf,EAAAA,cAAoB,IAAK,KAAMS,EAAKI,IAAIC,YAAYE,MAAOhB,EAAAA,cAAoBiB,EAAAA,GAAa,CAC7FpB,WAAYA,GACXa,GAAU,EAYFQ,EAAOC,IAAA,IAAC,KAACV,GAAK,SAAKT,EAAAA,cAAoBoB,EAAAA,EAAK,CACvDL,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASM,EAAiBtB,GACvC,OAAOC,EAAAA,cAAoBO,EAAUR,EAAOC,EAAAA,cAAoBsB,EAAAA,EAAqBvB,GACvF,C,6EC7CWwB,EAAc,sCACdC,EAAc,sCCiCzB,MA9Be,IAA8B,IAA7B,UAAEZ,EAAS,SAAEF,GAAU,EACrC,OACE,uBAAKe,UDVc,mCCWjB,2BACE,sBAAIA,UDNU,mCCOZ,sBAAIA,UAAWF,GACb,gBAAC,KAAI,CAACG,GAAG,IAAID,UAAWD,GAAa,SAIvC,sBAAIC,UAAWF,GACb,gBAAC,KAAI,CAACG,GAAG,SAASD,UAAWD,GAAa,UAI5C,sBAAIC,UAAWF,GACb,gBAAC,KAAI,CAACG,GAAG,QAAQD,UAAWD,GAAa,WAM/C,4BACE,sBAAIC,UD9BS,iCC8BYb,GACxBF,GAEC,C,+CChBV,IAhBY,IAAgB,IAAf,MAAEK,GAAO,EACpB,MAAMN,GAAOkB,EAAAA,EAAAA,IAAe,cAU5B,OACE,6BAAQZ,EAAM,MAAIN,EAAKmB,KAAKC,aAAad,MAAc,C,8FCkBpD,MAAMe,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBlC,GAC/B,MAAMmC,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfjC,EACFA,EAAWmC,GAGb,IAAIA,KAAsBnC,IAChC,CAACmC,EAAmBnC,GACzB,CAGA,MAAMoC,EAAc,CAAC,EAQd,SAAShB,GAAY,WAACpB,EAAU,SAAEa,EAAQ,qBAAEwB,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfrC,EACHA,EAAW,CAAC,GACZA,GAAcoC,EAEJF,EAAiBlC,GAG5B,gBACLiC,EAAWM,SACX,CAACC,MAAOF,GACRzB,EAEJ,C","sources":["webpack://gatsby-starter-hello-world/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://gatsby-starter-hello-world/./src/components/layout.module.css","webpack://gatsby-starter-hello-world/./src/components/layout.js","webpack://gatsby-starter-hello-world/./src/components/seo.js","webpack://gatsby-starter-hello-world/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import GATSBY_COMPILED_MDX from \"/Users/yumeng/career_website/new_journey/blog/gameplay-transform.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport {MDXProvider} from '@mdx-js/react';\nimport \"katex/dist/katex.min.css\";\nconst H1 = props => React.createElement(\"h1\", Object.assign({\n  style: {\n    color: '#4942E4'\n  }\n}, props));\nconst H2 = props => React.createElement(\"h2\", Object.assign({\n  style: {\n    color: '#4942E4'\n  }\n}, props));\nconst H3 = props => React.createElement(\"h3\", Object.assign({\n  style: {\n    color: '#4942E4'\n  }\n}, props));\nconst components = {\n  h1: H1,\n  h2: H2,\n  h3: H3\n};\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var heading1 = \"layout-module--heading-1--62232\";\nexport var heading2 = \"layout-module--heading-2--1175d\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport {\n  container,\n  heading,\n  navLinks,\n  navLinkItem,\n  navLinkText\n} from './layout.module.css'\nconst Layout = ({ pageTitle, children }) => {\n  return (\n    <div className={container}>\n      <nav>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link to=\"/\" className={navLinkText}>\n              Home\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/about\" className={navLinkText}>\n              About\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/blog\" className={navLinkText}>\n              Blog\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <title>{title} | {data.site.siteMetadata.title}</title>\n  )\n}\n\nexport default Seo","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["components","h1","props","React","Object","assign","style","color","h2","h3","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","date","MDXProvider","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","navLinkItem","navLinkText","className","to","useStaticQuery","site","siteMetadata","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}